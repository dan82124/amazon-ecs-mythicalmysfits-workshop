openapi: "3.0.1"
info:
  title: "Validation Services"
  version: "2.1.2"
  description: "Validation services API enables account and identity verification of different parties."
  contact:
    name: "JPMC Technical Services Support"
servers:
- url: "https://apigatewaycat.jpmorgan.com/tsapi/v2"
  description: "UAT/CAT"
- url: "https://apigateway.jpmorgan.com/tsapi/v2"
  description: "PROD"
tags:
- name: "Account Validation"
  description: "API to validate accounts"
- name: "Entity Validation"
  description: "API to validate entities"
paths:
  /validations/entities:
    post:
      tags:
      - "Entity Validation"
      operationId: "entityValidation"
      summary: "Entity validation"
      description: "Validate an entity"
      parameters:
      - name: "x-program-id"
        in: "header"
        required: true
        description: "Validation services program id."
        schema:
          type: "string"
        examples:
          IndividualRequest:
            value: "COMPANYINDIVIDUAL"
          OrganizationRequest:
            value: "COMPANYORGANIZATION"
      - name: "x-program-id-type"
        in: "header"
        required: false
        description: "Type of program client has onboarded."
        schema:
          type: "string"
        examples:
          IndividualRequest:
            value: "AVS"
          OrganizationRequest:
            value: "AVS"
      requestBody:
        content:
          application/json:
            schema:
              type: "array"
              minItems: 0
              items:
                $ref: "#/components/schemas/EntityDetails"
            examples:
              IndividualRequest:
                value:
                - requestId: "123e4567-e89b-12d3-a456-426614174123"
                  entity:
                    individual:
                      firstName: "JOHN"
                      lastName: "SMITH"
                      middleName: "KAY"
                      additionalLastName: "MARTINEZ"
                      namePrefix: "MR"
                      nameSuffix: "JR"
                      fullName: "MR JOHN KAY SMITH MARTINEZ JR"
                      postalAddress:
                        addressLine:
                        - "123 MAIN ST"
                        - "APT 1A"
                        unitNumber: "4"
                        buildingNumber: "120"
                        buildingName: "CAPITAL TOWER"
                        streetName: "CLEMENT TOWN"
                        streetType: "AVENUE"
                        suburb: "CITRUS PARK"
                        townName: "TAMPA"
                        countrySubDvsn: "FL"
                        country: "US"
                        postalCode: "33607"
                        county: "HILLSBOROUGH"
                        residentialStatus: "Rent"
                      contactDetails:
                        phoneNumbers:
                        - phoneNumber: "2137685675"
                          phoneNumberType: "home"
                        - phoneNumber: "2137685676"
                          phoneNumberType: "work"
                        - phoneNumber: "2137685677"
                          phoneNumberType: "mobile"
                        email: "jsmith@fakemail.com"
                      identification:
                      - idType: "SSN"
                        id: "111223333"
                      - idType: "DRIVERS_LICENSE_USA"
                        id: "F123-1234-1234"
                        issuer: "FL"
                        expirationDate: 20240131
                      - idType: "NATIONAL_ID"
                        id: "440861896421345987"
                        issuer: "FL"
                        expirationDate: 20240130
                      - idType: "VOTER_ID"
                        id: "SIQ3830379"
                      - idType: "DRIVERS_LICENSE"
                        id: "DL6971548E"
                        issueDate: 20140131
                        expirationDate: 20240130
                      gender: "M"
                      dateOfBirth: 19850131
              OrganizationRequest:
                value:
                - requestId: "123e4567-e89b-12d3-a456-426614174557"
                  entity:
                    organization:
                      name: "NATIONAL TITLE AND ESCROW OF HAWAII INC"
                      alternateName: "NATIONAL HAWAII"
                      postalAddress:
                        addressLine:
                        - "201 MERCHANT ST"
                        - "STE 2100"
                        townName: "HONOLULU"
                        countrySubDvsn: "HI"
                        country: "US"
                        postalCode: "96813"
                        county: "HONOLULU COUNTY"
                      contactDetails:
                        phoneNumbers:
                        - phoneNumber: "8085550422"
                          phoneNumberType: "work"
                        email: "titleEscrowHawaii@nationaltitle.com"
                      authorizedIndividuals:
                      - firstName: "JOHN"
                        lastName: "SMITH"
                        middleName: "KAY"
                        additionalLastName: "MARTINEZ"
                        namePrefix: "MR"
                        nameSuffix: "JR"
                        fullName: "MR JOHN KAY SMITH MARTINEZ JR"
                        postalAddress:
                          addressLine:
                          - "123 MAIN ST"
                          - "APT 1A"
                          unitNumber: "4"
                          buildingNumber: "120"
                          buildingName: "CAPITAL TOWER"
                          streetName: "CLEMENT TOWN"
                          streetType: "AVENUE"
                          suburb: "CITRUS PARK"
                          townName: "TAMPA"
                          countrySubDvsn: "FL"
                          country: "US"
                          postalCode: "33607"
                          county: "HILLSBOROUGH"
                          residentialStatus: "Rent"
                        contactDetails:
                          phoneNumbers:
                          - phoneNumber: "2137685675"
                            phoneNumberType: "home"
                          - phoneNumber: "2137685676"
                            phoneNumberType: "work"
                          - phoneNumber: "2137685677"
                            phoneNumberType: "mobile"
                          email: "jsmith@fakemail.com"
                        identification:
                        - idType: "SSN"
                          id: "111223333"
                        - idType: "DRIVERS_LICENSE_USA"
                          id: "F123-1234-1234"
                          issuer: "FL"
                          issueDate: 20140131
                          expirationDate: 20240130
                        - idType: "BUSINESS_REGISTRATION_NUMBER"
                          id: "1234567"
                        - idType: "TAX_ID"
                          id: "123456789"
                        gender: "M"
                        dateOfBirth: 19850131
        required: true
      callbacks:
        validationStatus:
          '{client-url}/status':
            post:
              summary: "Entity Validation status callbacks"
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/Payload"
                required: true
              responses:
                "200":
                  description: "OK"
      responses:
        "200":
          description: "Error codes which could be returned with a 200 http response.\n* 9001 - Data Provider Error\n* 9002 - Processing Error\n* 9003 - Timeout Error\n* 9004 - Client Configuration Error\n* 9005 - Bad Request\n"
          content:
            application/json:
              schema:
                type: "array"
                minItems: 0
                items:
                  $ref: "#/components/schemas/ResponseCollection"
              examples:
                IndividualRequest:
                  value:
                  - requestId: "123e4567-e89b-12d3-a456-426614174123"
                    responses:
                    - codes:
                        individualID:
                          code: 1101
                          message: "Pass"
                      provider: "LEXISNEXIS"
                OrganizationRequest:
                  value:
                  - requestId: "123e4567-e89b-12d3-a456-426614174123"
                    responses:
                    - provider: "LEXISNEXIS_BUSINESS_V2"
                      codes:
                        businessID:
                          code: 2101
                          message: "Pass"
        "400":
          description: "Bad Request.\n* GCA-023 - Please re-send request in valid format.\n* GCA-129 - ProgramId is required.\n"
          headers: {}
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        "403":
          description: "Forbidden.\n* GCA-001 - Unauthorized Access.\n* GCA-003 - Unauthorized Access.\n* GCA-103 - The programId was not found.\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        "429":
          description: "Too Many Requests"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
              examples:
                TooManyRequests:
                  summary: "Too many requests"
                  description: "The pre-defined API request rate limit breached due to \ntoo many requests within a specific time window."
                  value:
                    errors:
                    - errorCode: "9005"
                      errorMsg: "The agreed rate limit has been exceeded, try again later."
        "500":
          description: "Internal Error.\n* GCA-099 - System is Unavailable.\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
  /validations/accounts:
    post:
      tags:
      - "Account Validation"
      operationId: "accountValidation"
      summary: "Account validation"
      description: "Validate an account"
      parameters:
      - name: "x-program-id"
        in: "header"
        required: true
        description: "Validation services program id."
        schema:
          type: "string"
        examples:
          AccountValidationRequest:
            value: "COMPANYVERIAUTH"
      - name: "x-program-id-type"
        in: "header"
        required: false
        description: "Type of program client has onboarded."
        schema:
          type: "string"
        examples:
          AccountValidationRequest:
            value: "AVS"
      requestBody:
        content:
          application/json:
            schema:
              type: "array"
              minItems: 0
              items:
                $ref: "#/components/schemas/AccountDetails"
            examples:
              AccountValidationRequest:
                value:
                - requestId: "123e4567-e89b-12d3-a456-426614174000"
                  account:
                    accountNumber: "12345"
                    financialInstitutionId:
                      clearingSystemId:
                        id: "122199983"
                        idType: "ABA"
                  entity:
                    individual:
                      firstName: "Jane"
                      lastName: "Abbot"
                      fullName: "Jane Abbot"
        required: true
      callbacks:
        validationStatus:
          '{client-url}/status':
            post:
              summary: "Validation Status Callback"
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: "#/components/schemas/Payload"
                required: true
              responses:
                "200":
                  description: "OK"
      responses:
        "200":
          description: "OK\nError codes which could be returned with a 200 http response.\n* 9001 - Data Provider Error\n* 9002 - Processing Error\n* 9003 - Timeout Error\n* 9004 - Client Configuration Error\n* 9005 - Bad Request\n"
          content:
            application/json:
              schema:
                type: "array"
                minItems: 0
                items:
                  $ref: "#/components/schemas/ResponseCollection"
              examples:
                AccountValidationRequest:
                  value:
                  - requestId: "123e4567-e89b-12d3-a456-426614174000"
                    responses:
                    - codes:
                        verification:
                          code: 1002
                          message: "Open Valid"
                        authentication:
                          code: 5002
                          message: "Ownership Match"
                      provider: "JPMC_ACH"
                      details:
                        paymentCheckContributingStatus: "Contributed"
                        accountNumber: "XXXX5"
                        financialInstitutionId:
                          clearingSystemId:
                            id: "122199983"
                            idType: "ABA"
        "400":
          description: "Bad Request.\n* GCA-023 - Please re-send request in valid format.\n* GCA-129 - ProgramId is required.\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        "403":
          description: "Forbidden.\n* GCA-001 - Unauthorized Access.\n* GCA-003 - Unauthorized Access.\n* GCA-103 - The programId was not found.\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
        "429":
          description: "Too Many Requests"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
              examples:
                TooManyRequests:
                  summary: "Too many requests"
                  description: "The pre-defined API request rate limit breached due to too many requests within a specific time window."
                  value:
                    errors:
                    - errorCode: "9005"
                      errorMsg: "The agreed rate limit has been exceeded, try again later."
        "500":
          description: "Internal Error.\n* GCA-099 - System is Unavailable.\n"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Errors"
components:
  schemas:
    Payload:
      $ref: "#/components/schemas/ResponseCollection"
    PostalAddress:
      title: "PostalAddress"
      required:
      - "country"
      type: "object"
      description: "Required for Entity Validation"
      properties:
        addressLine:
          type: "array"
          minItems: 0
          items:
            type: "string"
            maxLength: 60
            minLength: 1
            example: "123 Main St"
          description: "List of comma-separated address lines."
          example:
          - "123 Main St"
          - "Apartment 2a"
        townName:
          maxLength: 25
          minLength: 1
          type: "string"
          description: "City or Town name."
          example: "Tampa"
        countrySubDvsn:
          type: "string"
          minLength: 1
          maxLength: 25
          example: "FL"
          description: "State or Province.<b> If used for a US state then should be 2 character code."
        country:
          maxLength: 2
          minLength: 2
          pattern: "^[A-Z]{2}$"
          type: "string"
          description: "2 character ISO 3166_1 Country Code. <br>\n Required for individual and business validation."
          example: "US"
        postalCode:
          maxLength: 10
          minLength: 5
          pattern: "^([0-9]{5}|[0-9]{9}|[0-9]{5}-[0-9]{4})$"
          type: "string"
          example: "52255"
        county:
          maxLength: 60
          minLength: 1
          type: "string"
          description: "County."
          example: "Hillsborough"
        residentialStatus:
          type: "string"
          description: "Subject's owner or renter status. Possible values: * Own * Rent"
        unitNumber:
          maxLength: 10
          minLength: 1
          type: "string"
          description: "Unit Number"
          example: "1"
        buildingNumber:
          maxLength: 10
          minLength: 1
          type: "string"
          description: "Building Number"
          example: "101"
        buildingName:
          maxLength: 60
          minLength: 1
          type: "string"
          description: "Building Name"
          example: "Tampa"
        streetType:
          maxLength: 60
          minLength: 1
          type: "string"
          description: "Street Type"
          example: "Avenue"
        streetName:
          maxLength: 60
          minLength: 1
          type: "string"
          description: "Street Name"
          example: "Clement Town"
        suburb:
          maxLength: 60
          minLength: 1
          type: "string"
          description: "suburb"
          example: "Citrus Park"
    EntityId:
      required:
      - "id"
      - "idType"
      type: "object"
      properties:
        idType:
          type: "string"
          description: "Entity Identification type required for entity and financial validation:\n\n- Individual entity possible values: \n  - *SSN* (Optional for US), \n  - *ITIN* (Optional for US), \n  - *DRIVERS_LICENSE_USA* (Optional for US), \n  - *PAN_CARD_INDIA* (Optional for IN), \n  - *NATIONAL_ID_CHINA*(Mandatory for CN), \n  - *DRIVERS_LICENSE* (Optional for IN), \n  - *VOTER_ID* (Optional for IN),\n  - TAX_ID (Mandatory for GR), \n  - *SOCIAL_SERVICE* (Optional for CA, IT, MX, PH), \n  - *NATIONAL_ID* (Mandatory for HK, SG, AE, VN, CR, DN, ID, MY, MT, KR, SE TW, TH. Optional for MX, AR, BR, CL, RO, ES)\n\n---\n\n- Business possible values: \n  - *FEIN* (Optional for US) ), \n  - *PAN_CARD_INDIA* (Optional for IN), \n  - *ORGANIZATION_ID_CHINA* (Optional for CN), \n  - *BUSINESS_REGISTRATION_NUMBER* (Mandatory for Brazil, Optional for all other countries), \n  - *TAX_ID* (Mandatory for FR, DE, LU, NL, GB, AT, BE, CZ, DK, FL, GR, ID, IE, IT, MT, PL, PT, RO, SK, ES, SE, CH, BG, HR, CY, EE, HU, LY, LT)"
          enum:
          - "SSN"
          - "DRIVERS_LICENSE_USA"
          - "PAN_CARD_INDIA"
          - "ITIN"
          - "FEIN"
          - "NATIONAL_ID_CHINA"
          - "ORGANIZATION_ID_CHINA"
          - "NATIONAL_ID"
          - "DRIVERS_LICENSE"
          - "VOTER_ID"
          - "SOCIAL_SERVICE"
          - "BUSINESS_REGISTRATION_NUMBER"
          - "TAX_ID"
        id:
          maxLength: 28
          minLength: 1
          type: "string"
          description: "ID Number.<br>In case of SSN, must contain either full SSN/ITIN or last four digits of SSN.\ni.e. Only four digits or nine digits will be accepted for SSN. <br>\nIn case of PAN ID, must be 10 characters: first five characters as letters, followed by four digits and then a letter.\nRequired for financial validation."
        issuer:
          maxLength: 6
          minLength: 2
          type: "string"
          description: "State or Place of Issuance."
        issueDate:
          maxLength: 8
          minLength: 8
          type: "integer"
          description: "Structure that contains passport issue date elements, format = YYYYMMDD."
          format: "int32"
        expirationDate:
          maxLength: 8
          minLength: 8
          type: "integer"
          description: "Structure that contains passport expiration date elements, format = YYYYMMDD."
          format: "int32"
    Response:
      type: "object"
      properties:
        codes:
          $ref: "#/components/schemas/ResultCollection"
        provider:
          type: "string"
          description: "- For Entity validation the following providers are applicable:\n    - **JPMC**, \n    - **JPMC_SCREENING**,\n    - **LEXISNEXIS** \n    - **LEXISNEXIS_INSTANT_ID**,\n    - **LEXISNEXIS_BUSINESS_V2, \n    - **GIACT_BUSINESS**, \n    - **GIACT_INDIVIDUAL**,\n    - **TRULIOO_INDIVIDUAL**,\n    - **TRULIOO_BUSINESS**\n- For Account validation the following providers are applicable:\n    - **JPMC**, \n    - **JPMC_BENE**, \n    - **JPMC_ACH**, \n    - **GIACT**, \n    - **MICRODEPOSITS**, \n    - **EWS**, \n    - **EWS_VA**,\n    - **PATTERN_MATCH**"
        details:
          $ref: "#/components/schemas/ResponseDetails"
    ResponseCollection:
      title: "Validation Response Collection"
      description: "A collection of validation responses"
      type: "object"
      properties:
        requestId:
          maxLength: 72
          pattern: "^[a-zA-Z0-9\\\\-]*$"
          type: "string"
          example: "ad020818-aecb-4427-a4d8-a9912f0742e4"
        profileName:
          type: "string"
        responses:
          type: "array"
          minItems: 0
          items:
            $ref: "#/components/schemas/Response"
    ResponseDetails:
      type: "object"
      properties:
        paymentCheckContributingStatus:
          type: "string"
        accountNumber:
          type: "string"
        financialInstitutionId:
          $ref: "#/components/schemas/FinancialInstitutionId"
        providerResponse:
          type: "object"
          additionalProperties:
            type: "object"
            description: "Refer to the API and Technical Specifications Doc based on your product for provider response details."
          description: "Refer to the API and Technical Specifications Doc based on your product for provider response details."
    Result:
      type: "object"
      properties:
        code:
          type: "integer"
          description: "Error codes have first digit of 9,\nfor example:\n* 9001 : Data Provider Error\n* 9002 : Processing Error\n* 9003 : Timeout Error\n* 9004 : Client Configuration Error\n* 9005 : Bad Request\n"
          format: "int32"
          example: 1002
        message:
          type: "string"
          description: "Message is based on the code:\n* 1 = Open Valid\n* 2 = Closed Invalid\n* 3 = No Information Found\n* 4 = Debit Return Likely\n* 5 = Ownership Match\n* 6 = Ownership No Match\n* 7 = No Information Found\n"
          example: "Open Valid"
        sequence:
          type: "integer"
          format: "int32"
        authorizedRepIDs:
          type: "object"
          properties:
            code:
              type: "integer"
              description: "Refer to the API and Technical Specifications Doc  based on your product for provider response details\n\nError codes have first digit of 9,\nfor example:\n* 9001 : Data Provider Error\n* 9002 : Processing Error\n* 9003 : Timeout Error\n* 9004 : Client Configuration Error\n* 9005 : Bad Request\n"
              format: "int32"
              example: 1002
            message:
              type: "string"
              description: "Message is based on the code.<b>\n* 1 = Open Valid\n* 2 = Closed Invalid\n* 3 = No Information Found\n* 4 = Debit Return Likely\n* 5 = Ownership Match\n* 6 = Ownership No Match\n* 7 = No Information Found\n"
              example: "Open Valid"
            sequence:
              type: "integer"
              format: "int32"
          description: "An array that contains the results for the authorized representative for a given business. The authorizedRepIds can be returned when using provider 'LEXISNEXIS_BUSINESS_V2'."
    AccountScore:
      type: "object"
      title: "Account Score"
      description: "Account score information in coded message format being:\n\n| code  | message              |\n|-------|----------------------|\n| 1109  | Information Found    |\n| 1209  | No Information Found |"
      properties:
        code:
          type: "integer"
          example: 1109
        message:
          type: "string"
          example: "Information Found"
      example:
        code: 1209
        message: "No Information Found"
    ResultCollection:
      type: "object"
      properties:
        error:
          $ref: "#/components/schemas/Result"
        verification:
          $ref: "#/components/schemas/Result"
        authentication:
          $ref: "#/components/schemas/Result"
        individualID:
          $ref: "#/components/schemas/Result"
        businessID:
          $ref: "#/components/schemas/Result"
        limitAmount:
          $ref: "#/components/schemas/Result"
        individualScreening:
          $ref: "#/components/schemas/Result"
        businessScreening:
          $ref: "#/components/schemas/Result"
        verificationMicrodeposit:
          $ref: "#/components/schemas/Result"
        authenticationMicrodeposit:
          $ref: "#/components/schemas/Result"
        accountScore:
          $ref: "#/components/schemas/AccountScore"
    EntityDetails:
      required:
      - "requestId"
      type: "object"
      properties:
        profileName:
          type: "string"
        requestId:
          maxLength: 72
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-]+$"
          type: "string"
          description: "Unique Identifier for a request.<br>Preferably a Universally Unique Identifier (UUID)."
          example: "ad020818-aecb-4427-a4d8-a9912f0742e4"
        entity:
          oneOf:
          - $ref: "#/components/schemas/Individual"
          - $ref: "#/components/schemas/Organization"
    Individual:
      title: "Individual"
      required:
      - "individual"
      type: "object"
      properties:
        individual:
          $ref: "#/components/schemas/IndividualEntity"
    IndividualEntity:
      title: "Individual Entity"
      description: "An individual entity"
      required:
      - "firstName"
      - "fullName"
      - "lastName"
      type: "object"
      properties:
        firstName:
          maxLength: 40
          minLength: 1
          pattern: "^[A-Za-z0-9\\s.\\-?&:()`@,+/'%#!^>=]+$"
          type: "string"
          description: "First Name. <br>\nFirst and Last Name or Full Name is required for individual validation."
          example: "Jane"
        lastName:
          maxLength: 40
          minLength: 1
          pattern: "^[A-Za-z0-9\\s.\\-?&:()`@,+/'%#!^>=]+$"
          type: "string"
          description: "Last Name. <br>\nFirst and Last Name or Full Name is required for individual validation."
          example: "Smith"
        middleName:
          maxLength: 40
          minLength: 1
          pattern: "^[A-Za-z0-9\\s.\\-?&:()`@,+/'%#!^>=]+$"
          type: "string"
          description: "Middle Name or Initial. <br>\nIf middle initial is included, it should be a single letter without a period."
        additionalLastName:
          type: "string"
          maxLength: 40
          minLength: 1
        issueDate:
          type: "string"
          format: "date"
        namePrefix:
          maxLength: 4
          minLength: 1
          pattern: "^[A-Za-z0-9\\s.\\-?&:()`+/'%#!^>=]+$"
          type: "string"
        nameSuffix:
          maxLength: 5
          minLength: 1
          pattern: "^[A-Za-z0-9\\s.\\-?&:()`+/'%#!^>=]+$"
          type: "string"
        fullName:
          maxLength: 150
          minLength: 1
          type: "string"
          description: "Full Name. <br>\nFirst and Last Name or Full Name is required for individual validation.<br>\nThe Full Name should be used when validating Individuals using a Chinese data provider."
          example: "Jane Smith"
        postalAddress:
          $ref: "#/components/schemas/PostalAddress"
        associatedCountries:
          type: "array"
          minItems: 0
          items:
            type: "string"
            maxLength: 2
            minLength: 2
            pattern: "^[A-Z]{2}$"
          description: "List of comma-separated 2 character ISO 3166_1 Country Code."
        identification:
          type: "array"
          minItems: 0
          maxItems: 21
          description: "SSN, ITIN, DRIVERS_LICENSE_USA, PAN_CARD_INDIA, NATIONAL_ID, NATIONAL_ID_CHINA."
          items:
            $ref: "#/components/schemas/EntityId"
        gender:
          maxLength: 1
          minLength: 1
          pattern: "^[MF]+$"
          type: "string"
          description: "Gender. Possible values: * M (Male) * F (Female)"
        dateOfBirth:
          maxLength: 8
          minLength: 8
          type: "integer"
          description: "Date of Birth; format = YYYYMMDD.<br>\nThe dateOfBirth is required for individual validation in the United States."
          format: "int32"
        contactDetails:
          type: "object"
          properties:
            email:
              maxLength: 320
              minLength: 1
              type: "string"
              description: "Email address"
            phoneNumbers:
              $ref: "#/components/schemas/PhoneNumbers"
        channel:
          maxLength: 20
          minLength: 1
          pattern: "Mail|PointOfSale|Kiosk|Internet|Branch|Telephonic|Other"
          type: "string"
          description: "Channel. Possible values: Mail, PointOfSale, Kiosk, Internet, Branch, Telephonic, Other"
        income:
          type: "object"
          properties:
            income:
              maxLength: 20
              minLength: 1
              pattern: "^[0-9]+$"
              type: "string"
              description: "Income."
            incomeCurrency:
              maxLength: 3
              minLength: 1
              pattern: "^[A-Z]+$"
              type: "string"
              description: "Income Currency. Ex: USD"
              example: "USD"
    Organization:
      title: "Organization"
      required:
      - "organization"
      type: "object"
      properties:
        organization:
          $ref: "#/components/schemas/OrganizationEntity"
    OrganizationEntity:
      title: "Organization Entity"
      required:
      - "name"
      type: "object"
      properties:
        name:
          maxLength: 100
          minLength: 1
          type: "string"
          description: "The Name of of the Business. <br>\nRequired for Business Validation."
          example: "Smith And Co"
        alternateName:
          maxLength: 100
          minLength: 1
          pattern: "^[A-Za-z0-9\\s.\\-?&:()`@,+/'%#!^>=]+$"
          type: "string"
          example: "Smith And Co Products"
        postalAddress:
          $ref: "#/components/schemas/PostalAddress"
        associatedCountries:
          type: "array"
          minItems: 0
          items:
            type: "string"
            maxLength: 2
            minLength: 2
            pattern: "^[A-Z]{2}$"
          description: "List of comma-separated 2 character ISO 3166_1 Country Code."
        identification:
          type: "array"
          minItems: 0
          description: "FEIN, PAN_CARD_INDIA, ORGANIZATION_ID_CHINA."
          items:
            $ref: "#/components/schemas/EntityId"
        contactDetails:
          type: "object"
          properties:
            email:
              maxLength: 320
              minLength: 1
              type: "string"
              description: "Email address."
            phoneNumbers:
              $ref: "#/components/schemas/PhoneNumbers"
        channel:
          maxLength: 20
          minLength: 1
          pattern: "Mail|PointOfSale|Kiosk|Internet|Branch|Telephonic|Other"
          type: "string"
          description: "Channel. Possible values: Mail, PointOfSale, Kiosk, Internet, Branch, Telephonic, Other"
        authorizedIndividuals:
          type: "array"
          minItems: 0
          description: "Related parties such as the Beneficial Owners of the business and the authorized signer or the controller."
          items:
            $ref: "#/components/schemas/IndividualEntity"
    Account:
      required:
      - "accountNumber"
      - "financialInstitutionId"
      type: "object"
      properties:
        accountNumber:
          maxLength: 17
          minLength: 4
          pattern: "^[0-9a-zA-Z]+$"
          type: "string"
          example: "123456789012"
        accountType:
          type: "string"
          description: "Type of account. Example values - CLABE, DDA, IBAN"
        financialInstitutionId:
          $ref: "#/components/schemas/FinancialInstitutionId"
    FinancialInstitutionId:
      title: "FinancialInstitutionId"
      required:
      - "clearingSystemId"
      type: "object"
      properties:
        bic:
          type: "string"
        postalAddress:
          $ref: "#/components/schemas/PostalAddress"
        clearingSystemId:
          required:
          - "id"
          - "idType"
          type: "object"
          properties:
            id:
              type: "string"
            idType:
              type: "string"
              description: "Type of Institution code. Examples values:\n- `CLABE`\n- `INFSC`\n- `IBAN`\n- `ABA`\n- `SWIFT_ID`"
    PhoneNumber:
      type: "object"
      properties:
        phoneNumber:
          type: "string"
          maxLength: 15
          description: "Phone numberValues should match the pattern ^[0-9]{10,15}$<br>"
        phoneNumberType:
          type: "string"
          description: "<br> Allowable types for individuals are::\n *\thome\n *\twork\n *\tmobile\nAllowable types for organizations are:\n *\twork <br>"
    PhoneNumbers:
      title: "PhoneNumbers"
      type: "array"
      minItems: 0
      items:
        $ref: "#/components/schemas/PhoneNumber"
    AccountDetails:
      required:
      - "account"
      - "requestId"
      type: "object"
      properties:
        profileName:
          type: "string"
        requestId:
          maxLength: 72
          minLength: 1
          pattern: "^[a-zA-Z0-9\\-]+$"
          type: "string"
          description: "Unique Identifier for a request.<br>Preferably a Universally Unique Identifier (UUID)."
          example: "ad020818-aecb-4427-a4d8-a9912f0742e4"
        account:
          $ref: "#/components/schemas/Account"
        entity:
          oneOf:
          - $ref: "#/components/schemas/Individual"
          - $ref: "#/components/schemas/Organization"
        transactions:
          type: "array"
          minItems: 0
          items:
            $ref: "#/components/schemas/Transaction"
    Transaction:
      type: "object"
      properties:
        context:
          type: "string"
          description: "Denotes the transaction type (i.e., deposit, deposit with cash back, cash check, bill payment, etc.).<br>The type of transaction which determines if a credit offset is required. Supported types- - CASH_LIKE_ITEM_PURCHASE - CHECK_CASHING - DEPOSIT - ENROLLMENT_FOR_RECURRING_PAYMENTS - NEW_ACCOUNT_OPENING - MAKE_A_PAYMENT - PAYROLL - INTERBANK_FUNDS_TRANSFER"
        processControlTransactionCode:
          maximum: 999999
          minimum: 100000
          maxLength: 6
          minLength: 6
          type: "integer"
          description: "Process Control Transaction Code."
          format: "int32"
        amount:
          $ref: "#/components/schemas/Amount"
    Amount:
      type: "object"
      properties:
        amount:
          minimum: 0
          type: "number"
          description: "Must be present to receive a Participant Model score and also to receive the benefit of below functionality:\n* high focus item\n* duplication detection\n* stop payment notification\n<br><br>For inquiries with no dollar amount, enrollments for example, it is recommended to inquire applying an average dollar amount for the use case.<br>\n<b>Required if available.</b>"
          format: "double"
          example: 1.23456789099E9
        currency:
          maxLength: 3
          minLength: 3
          type: "string"
          description: "Required when amount is not zero."
        checkSerialNo:
          maxLength: 15
          minLength: 1
          type: "integer"
          description: "For check transactions.<br>\nMust be present to get the benefit of below functionality:<br>\n* high focus item\n* duplication detection\n* stop payment notification.\n<br><br><b>Not required for ACH inquiries.</b>"
          format: "int32"
    Errors:
      type: "object"
      properties:
        errors:
          type: "array"
          minItems: 0
          items:
            type: "object"
            properties:
              errorCode:
                type: "string"
                example: "GCA-001"
              errorMsg:
                type: "string"
                example: "Unauthorized Access"
